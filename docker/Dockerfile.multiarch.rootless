FROM --platform=$BUILDPLATFORM docker.io/golang:1.24 AS go-build

RUN groupadd -g 1000 squad-aegis && \
    useradd -u 1000 -g 1000 squad-aegis && \
    mkdir -p /var/lib/squad-aegis && \
    chown -R squad-aegis:squad-aegis /var/lib/squad-aegis

WORKDIR /app
COPY . .
RUN go mod tidy && \
    go mod vendor && \
    make release

ARG TARGETOS TARGETARCH
ENV GODEBUG=netdns=go
ENV APP_IN_CONTAINER=true
ENV XDG_CACHE_HOME=/var/lib/squad-aegis
ENV XDG_DATA_HOME=/var/lib/squad-aegis
ENV APP_WEB_UI_PROXY=http://localhost:3000/
RUN cp dist/${TARGETOS}_${TARGETARCH}/squad-aegis /bin/

FROM node:18-alpine AS nuxt-build
WORKDIR /app/web
RUN corepack enable
COPY web/package.json web/pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile
COPY web/ .
RUN pnpm run build

FROM node:18-bookworm-slim AS final

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --from=go-build /bin/squad-aegis /bin/squad-aegis
COPY --from=nuxt-build /app/web/.output /app/web/.output
RUN rm -f /etc/nginx/sites-enabled/default && rm -f /etc/nginx/conf.d/default.conf
COPY docker/nginx.conf /etc/nginx/conf.d/default.conf


COPY docker/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

ENV APP_IN_CONTAINER=true
ENV XDG_CACHE_HOME=/var/lib/squad-aegis
ENV XDG_DATA_HOME=/var/lib/squad-aegis
ENV APP_WEB_UI_PROXY=http://localhost:3000/

EXPOSE 80

# Use the entrypoint script to launch all services
ENTRYPOINT ["/entrypoint.sh"]
