variables:
  - &golang_image "docker.io/golang:1.24"
  - &node_image "docker.io/node:18-alpine"
  - &xgo_image "docker.io/techknowlogick/xgo:go-1.24.x"
  - &buildx_plugin "docker.io/woodpeckerci/plugin-docker-buildx:5.2.1"
  - &platforms_release "linux/amd64"
  - &platforms_preview "linux/amd64"
  - &build_args "CI_COMMIT_SHA=${CI_COMMIT_SHA},CI_COMMIT_BRANCH=${CI_COMMIT_BRANCH},CI_COMMIT_TAG=${CI_COMMIT_TAG}"

  # vars used on push / tag events only
  - publish_logins: &publish_logins
      - registry: https://index.docker.io/v1/
        username: insidiousfiddler
        password:
          from_secret: docker_password
      - registry: registry.vmgware.dev
        username: "robot-insidiousfiddler+woodpecker-ci"
        password:
          from_secret: harbor_password
  - &publish_repos "insidiousfiddler/squad-aegis,registry.vmgware.dev/insidiousfiddler/squad-aegis"
  - &publish_repos_logwatcher "insidiousfiddler/squad-aegis-logwatcher,registry.vmgware.dev/insidiousfiddler/squad-aegis-logwatcher"
  - path: &when_path
      - "web/**"
      # go source code
      - "**/*.go"
      - "go.*"
      # Dockerfile changes
      - "docker/**"
      # pipeline config changes
      - ".woodpecker/docker.yaml"

when:
  - event: [pull_request, tag]
  - event: push
    branch: ${CI_REPO_DEFAULT_BRANCH}
    path: *when_path

steps:
  vendor:
    image: *golang_image
    pull: true
    commands:
      - go mod vendor
    when:
      - event: pull_request
        evaluate: 'CI_COMMIT_PULL_REQUEST_LABELS contains "build_pr_images"'
      - event: pull_request
        path: *when_path
      - branch:
          - ${CI_REPO_DEFAULT_BRANCH}
        event: [push, tag]
        path: *when_path

  publish-server-preview:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      repo: insidiousfiddler/squad-aegis
      dockerfile: docker/Dockerfile.multiarch.rootless
      platforms: *platforms_preview
      tag: pull_${CI_COMMIT_PULL_REQUEST}
      build_args: *build_args
      logins: *publish_logins
    when:
      evaluate: 'CI_COMMIT_PULL_REQUEST_LABELS contains "build_pr_images"'
      event: pull_request

  build-server-dryrun:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      dry_run: true
      repo: insidiousfiddler/squad-aegis
      dockerfile: docker/Dockerfile.multiarch.rootless
      platforms: *platforms_preview
      tag: pull_${CI_COMMIT_PULL_REQUEST}
      build_args: *build_args
    when:
      - evaluate: 'not (CI_COMMIT_PULL_REQUEST_LABELS contains "build_pr_images")'
        event: pull_request
        path: *when_path

  publish-server-next:
    image: *buildx_plugin
    settings:
      repo: *publish_repos
      dockerfile: docker/Dockerfile.multiarch.rootless
      platforms: *platforms_release
      tag: [next, "next-${CI_COMMIT_SHA:0:10}"]
      logins: *publish_logins
      build_args: *build_args
    when:
      branch: ${CI_REPO_DEFAULT_BRANCH}
      event: push
      path: *when_path

  release-server:
    image: *buildx_plugin
    settings:
      repo: *publish_repos
      dockerfile: docker/Dockerfile.multiarch.rootless
      platforms: *platforms_release
      # remove 'latest' on older version branches to avoid accidental downgrade
      tag: [latest, "${CI_COMMIT_TAG}"]
      logins: *publish_logins
      build_args: *build_args
    when:
      event: tag

  ###############
  # Log Watcher #
  ###############

  publish-preview-logwatcher:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      repo: insidiousfiddler/squad-aegis-logwatcher
      dockerfile: docker/Dockerfile.logwatcher.multiarch
      platforms: *platforms_preview
      tag: pull_${CI_COMMIT_PULL_REQUEST}
      build_args: *build_args
      logins: *publish_logins
    when:
      evaluate: 'CI_COMMIT_PULL_REQUEST_LABELS contains "build_pr_images"'
      event: pull_request

  build-logwatcher-dryrun:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      dry_run: true
      repo: insidiousfiddler/squad-aegis-logwatcher
      dockerfile: docker/Dockerfile.logwatcher.multiarch
      platforms: *platforms_preview
      tag: pull_${CI_COMMIT_PULL_REQUEST}
      build_args: *build_args
    when:
      - evaluate: 'not (CI_COMMIT_PULL_REQUEST_LABELS contains "build_pr_images")'
        event: pull_request
        path: *when_path

  publish-logwatcher-next:
    image: *buildx_plugin
    settings:
      repo: *publish_repos_logwatcher
      dockerfile: docker/Dockerfile.logwatcher.multiarch
      platforms: *platforms_release
      tag: [next, "next-${CI_COMMIT_SHA:0:10}"]
      logins: *publish_logins
      build_args: *build_args
    when:
      branch: ${CI_REPO_DEFAULT_BRANCH}
      event: push

  release-logwatcher:
    image: *buildx_plugin
    settings:
      repo: *publish_repos_logwatcher
      dockerfile: docker/Dockerfile.logwatcher.multiarch
      platforms: *platforms_release
      # remove 'latest' on older version branches to avoid accidental downgrade
      tag: [latest, "${CI_COMMIT_TAG}"]
      logins: *publish_logins
      build_args: *build_args
    when:
      event: tag
